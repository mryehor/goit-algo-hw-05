#Замикання в програмуванні - це функція, яка зберігає посилання на змінні зі свого лексичного контексту, тобто з області, де вона була оголошена.
#Реалізуйте функцію caching_fibonacci, яка створює та використовує кеш для зберігання і повторного використання вже обчислених значень чисел Фібоначчі
#Ряд Фібоначчі - це послідовність чисел виду: 0, 1, 1, 2, 3, 5, 8, ..., де кожне наступне число послідовності виходить додаванням двох попередніх членів ряду.
#У загальному вигляді для обчислення n-го члена ряду Фібоначчі потрібно вирахувати вираз:

#Це завдання можна вирішити рекурсивно, викликаючи функцію, що розраховує числа послідовності доти, доки виклик не сягне членів ряду, менших за n = 1, де послідовність задана.

#Вимоги до завдання:

#Функція caching_fibonacci() повинна повертати внутрішню функцію fibonacci(n).
#fibonacci(n) обчислює n-те число Фібоначчі. Якщо число вже знаходиться у кеші, функція має повертати значення з кешу.
#Якщо число не знаходиться у кеші, функція має обчислити його, зберегти у кеш та повернути результат.
#Використання рекурсії для обчислення чисел Фібоначчі.


def caching_fibonacci():

    cache = {}

    def fibonacci(n):
        if n in cache:
            return cache[n]
        if n <= 0:
            result = 0
        elif n == 1:
            result = 1
        else:
            result = fibonacci(n - 1) + fibonacci(n - 2)
        cache[n] = result
        return result
    return fibonacci

#Просимо користувача ввести число
n = int(input("Enter you number: "))
#Отримуємо функцию fibonacci з кешом
fib = caching_fibonacci()
#Викликаємо функцию
print(f"Fibonacci({n}) = {fib(n)} ")
